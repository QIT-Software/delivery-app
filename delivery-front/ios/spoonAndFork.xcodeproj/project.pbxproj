// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		29297DD9420B83A8644BBAA2 /* libPods-spoonAndFork-Restaurant Develop.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5D7D9F9BD3709CF3909B08BD /* libPods-spoonAndFork-Restaurant Develop.a */; };
		3C45B7E6ACF73C107BB697A1 /* libPods-spoonAndFork-Courier Staging.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0C518C86E2B4DD352257E5F6 /* libPods-spoonAndFork-Courier Staging.a */; };
		5A0E9AFCB6F0CE357A5BEE6B /* libPods-spoonAndFork-Client Develop.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 362E8EAFD1687EAD91D4F970 /* libPods-spoonAndFork-Client Develop.a */; };
		5E6E5ADAEDDC5681327D63BA /* libPods-spoonAndFork-Restaurant Staging.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E14433685C38D64D090FFBD5 /* libPods-spoonAndFork-Restaurant Staging.a */; };
		8A37620B152D40F3DE567107 /* libPods-spoonAndFork-Client Staging.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1074E08E731C22D5C3BBC769 /* libPods-spoonAndFork-Client Staging.a */; };
		9559AF458375AFD222403599 /* libPods-spoonAndFork-Restaurant Production.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6C6460E86CEB3E61EC70014F /* libPods-spoonAndFork-Restaurant Production.a */; };
		C69E1CDF134AB2C91CBA3F9B /* libPods-spoonAndFork-Courier Production.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CDAF309988C575DAE01930AC /* libPods-spoonAndFork-Courier Production.a */; };
		D131C37224DC3D950009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D131C37324DC3D950009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D131C37424DC3D970009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D131C37524DC3D970009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D131C37624DC3D980009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D131C37724DC3D990009C9BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D14A7D5D24B896CE00DB3568 /* SF-Pro-Rounded-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5524B896CC00DB3568 /* SF-Pro-Rounded-Bold.otf */; };
		D14A7D5E24B896CE00DB3568 /* SF-Pro-Rounded-Light.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5624B896CD00DB3568 /* SF-Pro-Rounded-Light.otf */; };
		D14A7D5F24B896CE00DB3568 /* SF-Pro-Rounded-Thin.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5724B896CD00DB3568 /* SF-Pro-Rounded-Thin.otf */; };
		D14A7D6024B896CE00DB3568 /* SF-Pro-Rounded-Ultralight.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5824B896CD00DB3568 /* SF-Pro-Rounded-Ultralight.otf */; };
		D14A7D6124B896CE00DB3568 /* SF-Pro-Rounded-Semibold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5924B896CD00DB3568 /* SF-Pro-Rounded-Semibold.otf */; };
		D14A7D6324B896CE00DB3568 /* SF-Pro-Rounded-Heavy.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5B24B896CD00DB3568 /* SF-Pro-Rounded-Heavy.otf */; };
		D14A7D8524B8970000DB3568 /* SF-Pro-Rounded-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5324B896B700DB3568 /* SF-Pro-Rounded-Medium.otf */; };
		D14A7D8624B8970200DB3568 /* SF-Pro-Rounded-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D4F24B896B600DB3568 /* SF-Pro-Rounded-Regular.otf */; };
		D14A7DF724BC7B8100DB3568 /* SF-Pro-Rounded-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5524B896CC00DB3568 /* SF-Pro-Rounded-Bold.otf */; };
		D14A7DF824BC7B8A00DB3568 /* SF-Pro-Rounded-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D4F24B896B600DB3568 /* SF-Pro-Rounded-Regular.otf */; };
		D14A7DF924BCC65300DB3568 /* SF-Pro-Rounded-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D5A24B896CD00DB3568 /* SF-Pro-Rounded-Black.otf */; };
		D1565D7024D07245006ADF83 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D1565D7124D07246006ADF83 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D1565D7224D07246006ADF83 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */; };
		D1C581C624E5B3FF00EA64C1 /* SF-Pro-Rounded-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D14A7D4F24B896B600DB3568 /* SF-Pro-Rounded-Regular.otf */; };
		D1F2ACDE24E1B51400F15A29 /* SF-Pro-Display-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1F2ACDD24E1B51400F15A29 /* SF-Pro-Display-Regular.otf */; };
		D1F2ACDF24E1B51400F15A29 /* SF-Pro-Display-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1F2ACDD24E1B51400F15A29 /* SF-Pro-Display-Regular.otf */; };
		D1F2ACE024E1B51500F15A29 /* SF-Pro-Display-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = D1F2ACDD24E1B51400F15A29 /* SF-Pro-Display-Regular.otf */; };
		D5890DC5247AC25300C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890DC6247AC25300C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890DCA247AC25300C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890DCB247AC25300C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890DD8247AC25700C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890DD9247AC25700C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890DDD247AC25700C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890DDE247AC25700C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890DEB247AC56000C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890DEC247AC56000C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890DF0247AC56000C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890DF1247AC56000C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890DFE247AC56300C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890DFF247AC56300C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890E03247AC56300C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890E04247AC56300C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890E11247AC56600C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890E12247AC56600C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890E16247AC56600C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890E17247AC56600C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890E24247AC5D600C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890E25247AC5D600C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890E29247AC5D600C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890E2A247AC5D600C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890E37247AC5D800C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890E38247AC5D800C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890E3C247AC5D800C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890E3D247AC5D800C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D5890E4A247AC5DA00C0D4FA /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		D5890E4B247AC5DA00C0D4FA /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		D5890E4F247AC5DA00C0D4FA /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		D5890E50247AC5DA00C0D4FA /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
		D78F869AABB8DFDEA6C40925 /* libPods-spoonAndFork-Courier Develop.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6DA6718CD65BE019DA47E0CB /* libPods-spoonAndFork-Courier Develop.a */; };
		F3A30118A192C6E0C25CF611 /* libPods-spoonAndFork-Client Production.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 56EE7A1F1D3FF3AA00522517 /* libPods-spoonAndFork-Client Production.a */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* spoonAndForkTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = spoonAndForkTests.m; sourceTree = "<group>"; };
		0C518C86E2B4DD352257E5F6 /* libPods-spoonAndFork-Courier Staging.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Courier Staging.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		1074E08E731C22D5C3BBC769 /* libPods-spoonAndFork-Client Staging.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Client Staging.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07F961A680F5B00A75B9A /* spoonAndFork.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = spoonAndFork.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = spoonAndFork/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = spoonAndFork/AppDelegate.m; sourceTree = "<group>"; };
		13B07FB21A68108700A75B9A /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/LaunchScreen.xib; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = spoonAndFork/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = spoonAndFork/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = spoonAndFork/main.m; sourceTree = "<group>"; };
		141EA3B193EBE7BAD67923D7 /* Pods-spoonAndFork-Client Develop.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Develop.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Develop/Pods-spoonAndFork-Client Develop.release.xcconfig"; sourceTree = "<group>"; };
		157F921DFFF5AB23F943876D /* Pods-spoonAndFork-Restaurant Staging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Staging.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Staging/Pods-spoonAndFork-Restaurant Staging.release.xcconfig"; sourceTree = "<group>"; };
		1662ED8E175D5DEBF9E2A8F1 /* Pods-spoonAndFork-Courier Develop.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Develop.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Develop/Pods-spoonAndFork-Courier Develop.release.xcconfig"; sourceTree = "<group>"; };
		187F515D893D3F5E2D5B053D /* Pods-spoonAndFork-Restaurant Develop.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Develop.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Develop/Pods-spoonAndFork-Restaurant Develop.release.xcconfig"; sourceTree = "<group>"; };
		2201BE4F04C73B463CA7BC44 /* Pods-spoonAndFork.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork/Pods-spoonAndFork.release.xcconfig"; sourceTree = "<group>"; };
		27143D1F26D4C8BA37506FC7 /* Pods-spoonAndFork-Client Debug.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Debug.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Debug/Pods-spoonAndFork-Client Debug.release.xcconfig"; sourceTree = "<group>"; };
		277DF20D9193983F9A6DB445 /* Pods-spoonAndFork-Restaurant Production.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Production.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Production/Pods-spoonAndFork-Restaurant Production.release.xcconfig"; sourceTree = "<group>"; };
		2C28D79E770B140743766293 /* Pods-spoonAndFork-Client Staging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Staging.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Staging/Pods-spoonAndFork-Client Staging.release.xcconfig"; sourceTree = "<group>"; };
		362E8EAFD1687EAD91D4F970 /* libPods-spoonAndFork-Client Develop.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Client Develop.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		374C39A5326744B9D6D3B727 /* libPods-spoonAndFork-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		3F3B90A0B0B9DFDCEE939B3F /* Pods-spoonAndFork.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork/Pods-spoonAndFork.debug.xcconfig"; sourceTree = "<group>"; };
		4C575CBF3DEFAC90DDCC60F3 /* Pods-spoonAndFork-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-tvOSTests/Pods-spoonAndFork-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
		51EAC0FB6743DFE3D2640B4E /* Pods-spoonAndFork-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-tvOS/Pods-spoonAndFork-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
		555CEDC970299BDF6DEFF243 /* Pods-spoonAndFork-Client Production.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Production.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Production/Pods-spoonAndFork-Client Production.release.xcconfig"; sourceTree = "<group>"; };
		56EE7A1F1D3FF3AA00522517 /* libPods-spoonAndFork-Client Production.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Client Production.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		5D7D9F9BD3709CF3909B08BD /* libPods-spoonAndFork-Restaurant Develop.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Restaurant Develop.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		69F6542A86497FAE61F8BCB6 /* Pods-spoonAndFork-Restaurant Debug.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Debug.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Debug/Pods-spoonAndFork-Restaurant Debug.debug.xcconfig"; sourceTree = "<group>"; };
		6C6460E86CEB3E61EC70014F /* libPods-spoonAndFork-Restaurant Production.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Restaurant Production.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		6DA6718CD65BE019DA47E0CB /* libPods-spoonAndFork-Courier Develop.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Courier Develop.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		75B1D49D839C4FE2204D136A /* Pods-spoonAndFork-Courier Production.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Production.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Production/Pods-spoonAndFork-Courier Production.debug.xcconfig"; sourceTree = "<group>"; };
		80FA916C78145D0F18C3176F /* Pods-spoonAndFork-Client Production.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Production.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Production/Pods-spoonAndFork-Client Production.debug.xcconfig"; sourceTree = "<group>"; };
		8263687D325B873337B9DD9D /* Pods-spoonAndFork-Courier Staging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Staging.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Staging/Pods-spoonAndFork-Courier Staging.release.xcconfig"; sourceTree = "<group>"; };
		85253E6C352A0587FD6F0EDA /* Pods-spoonAndFork-Courier Debug.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Debug.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Debug/Pods-spoonAndFork-Courier Debug.release.xcconfig"; sourceTree = "<group>"; };
		8A1CCCEC33F7E7F921C73971 /* Pods-spoonAndFork-Courier Production.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Production.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Production/Pods-spoonAndFork-Courier Production.release.xcconfig"; sourceTree = "<group>"; };
		8ECF52E970443B17441A12CA /* Pods-spoonAndFork-Restaurant Staging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Staging.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Staging/Pods-spoonAndFork-Restaurant Staging.debug.xcconfig"; sourceTree = "<group>"; };
		915887C9B0C638FA21D3E59A /* Pods-spoonAndFork-Courier Develop.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Develop.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Develop/Pods-spoonAndFork-Courier Develop.debug.xcconfig"; sourceTree = "<group>"; };
		A832FDAEA77FCD066D1370D8 /* Pods-spoonAndFork-Courier Staging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Staging.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Staging/Pods-spoonAndFork-Courier Staging.debug.xcconfig"; sourceTree = "<group>"; };
		ABB38AAB294DBCEEFF2D47B3 /* Pods-spoonAndFork-Courier Debug.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Courier Debug.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Courier Debug/Pods-spoonAndFork-Courier Debug.debug.xcconfig"; sourceTree = "<group>"; };
		AD00E0A9F4AECD441BAE7102 /* Pods-spoonAndFork-spoonAndForkTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-spoonAndForkTests.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-spoonAndForkTests/Pods-spoonAndFork-spoonAndForkTests.debug.xcconfig"; sourceTree = "<group>"; };
		AE05F1061F9C0E9A735A52F3 /* Pods-spoonAndFork-Client Staging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Staging.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Staging/Pods-spoonAndFork-Client Staging.debug.xcconfig"; sourceTree = "<group>"; };
		B0DF9F7442AEF1AF26CEE647 /* Pods-spoonAndFork-Client Develop.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Develop.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Develop/Pods-spoonAndFork-Client Develop.debug.xcconfig"; sourceTree = "<group>"; };
		B9F65CFB2870D27E775D0E29 /* Pods-spoonAndFork-Restaurant Production.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Production.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Production/Pods-spoonAndFork-Restaurant Production.debug.xcconfig"; sourceTree = "<group>"; };
		CC3D22E975B3D4647DAD6D55 /* libPods-spoonAndFork-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		CDAF309988C575DAE01930AC /* libPods-spoonAndFork-Courier Production.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Courier Production.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		CDCF1133E8124B459F87EF00 /* Pods-spoonAndFork-Restaurant Debug.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Debug.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Debug/Pods-spoonAndFork-Restaurant Debug.release.xcconfig"; sourceTree = "<group>"; };
		D14A7D4C24B896B500DB3568 /* SF-Pro-Rounded-Heavy.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Heavy.otf"; sourceTree = "<group>"; };
		D14A7D4D24B896B500DB3568 /* SF-Pro-Rounded-Light.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Light.otf"; sourceTree = "<group>"; };
		D14A7D4F24B896B600DB3568 /* SF-Pro-Rounded-Regular.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Regular.otf"; sourceTree = "<group>"; };
		D14A7D5024B896B600DB3568 /* SF-Pro-Rounded-Bold.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Bold.otf"; sourceTree = "<group>"; };
		D14A7D5124B896B600DB3568 /* SF-Pro-Rounded-Thin.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Thin.otf"; sourceTree = "<group>"; };
		D14A7D5324B896B700DB3568 /* SF-Pro-Rounded-Medium.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Rounded-Medium.otf"; sourceTree = "<group>"; };
		D14A7D5524B896CC00DB3568 /* SF-Pro-Rounded-Bold.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Bold.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Bold.otf"; sourceTree = "<group>"; };
		D14A7D5624B896CD00DB3568 /* SF-Pro-Rounded-Light.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Light.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Light.otf"; sourceTree = "<group>"; };
		D14A7D5724B896CD00DB3568 /* SF-Pro-Rounded-Thin.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Thin.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Thin.otf"; sourceTree = "<group>"; };
		D14A7D5824B896CD00DB3568 /* SF-Pro-Rounded-Ultralight.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Ultralight.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Ultralight.otf"; sourceTree = "<group>"; };
		D14A7D5924B896CD00DB3568 /* SF-Pro-Rounded-Semibold.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Semibold.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Semibold.otf"; sourceTree = "<group>"; };
		D14A7D5A24B896CD00DB3568 /* SF-Pro-Rounded-Black.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Black.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Black.otf"; sourceTree = "<group>"; };
		D14A7D5B24B896CD00DB3568 /* SF-Pro-Rounded-Heavy.otf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "SF-Pro-Rounded-Heavy.otf"; path = "../../resources/San-Francisco-family-master/SF Pro Rounded/SF-Pro-Rounded-Heavy.otf"; sourceTree = "<group>"; };
		D14A7DF624B8D41300DB3568 /* Client-Develop-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "Client-Develop-Info.plist"; sourceTree = SOURCE_ROOT; };
		D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		D1F2ACDD24E1B51400F15A29 /* SF-Pro-Display-Regular.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SF-Pro-Display-Regular.otf"; sourceTree = "<group>"; };
		D5890DD1247AC25300C0D4FA /* Client Staging.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Client Staging.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890DD2247AC25400C0D4FA /* Client-Staging-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Client-Staging-Info.plist"; path = "/Users/kostasavcenko/git/Spoon and Fork/spoon-and-fork-mobile/ios/Client-Staging-Info.plist"; sourceTree = "<absolute>"; };
		D5890DE4247AC25800C0D4FA /* Client Production.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Client Production.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890DE5247AC25800C0D4FA /* Client-Production-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Client-Production-Info.plist"; path = "/Users/backyard/git/spoon-and-fork/spoon-and-fork-mobile/ios/Client-Production-Info.plist"; sourceTree = "<absolute>"; };
		D5890DF7247AC56000C0D4FA /* Courier Develop.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Courier Develop.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890DF8247AC56000C0D4FA /* Courier-Develop-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Courier-Develop-Info.plist"; path = "/Users/backyard/git/spoon-and-fork/spoon-and-fork-mobile/ios/Courier-Develop-Info.plist"; sourceTree = "<absolute>"; };
		D5890E0A247AC56300C0D4FA /* Courier Staging.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Courier Staging.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890E0B247AC56400C0D4FA /* Courier-Staging-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Courier-Staging-Info.plist"; path = "/Users/backyard/git/spoon-and-fork/spoon-and-fork-mobile/ios/Courier-Staging-Info.plist"; sourceTree = "<absolute>"; };
		D5890E1D247AC56600C0D4FA /* Courier Production.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Courier Production.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890E1E247AC56700C0D4FA /* Courier-Production-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Courier-Production-Info.plist"; path = "/Users/kostasavcenko/git/Spoon and Fork/spoon-and-fork-mobile/ios/Courier-Production-Info.plist"; sourceTree = "<absolute>"; };
		D5890E30247AC5D600C0D4FA /* Restaurant Develop.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Restaurant Develop.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890E31247AC5D600C0D4FA /* Restaurant-Develop-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Restaurant-Develop-Info.plist"; path = "/Users/backyard/git/spoon-and-fork/spoon-and-fork-mobile/ios/Restaurant-Develop-Info.plist"; sourceTree = "<absolute>"; };
		D5890E43247AC5D800C0D4FA /* Restaurant Staging.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Restaurant Staging.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890E44247AC5D800C0D4FA /* Restaurant-Staging-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Restaurant-Staging-Info.plist"; path = "/Users/kostasavcenko/git/Spoon and Fork/spoon-and-fork-mobile/ios/Restaurant-Staging-Info.plist"; sourceTree = "<absolute>"; };
		D5890E56247AC5DA00C0D4FA /* Restaurant Production.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Restaurant Production.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		D5890E57247AC5DB00C0D4FA /* Restaurant-Production-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Restaurant-Production-Info.plist"; path = "/Users/kostasavcenko/git/Spoon and Fork/spoon-and-fork-mobile/ios/Restaurant-Production-Info.plist"; sourceTree = "<absolute>"; };
		D5E3493024797CA80006F066 /* Config.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Config.xcconfig; sourceTree = "<group>"; };
		D99FF4E5B7AB86E5D8F62737 /* Pods-spoonAndFork-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-tvOSTests/Pods-spoonAndFork-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
		E14433685C38D64D090FFBD5 /* libPods-spoonAndFork-Restaurant Staging.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-spoonAndFork-Restaurant Staging.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		E43F844306FE5C8A20EFB078 /* Pods-spoonAndFork-Client Debug.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Client Debug.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Client Debug/Pods-spoonAndFork-Client Debug.debug.xcconfig"; sourceTree = "<group>"; };
		E66B350BA722CCA1977B9060 /* Pods-spoonAndFork-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-tvOS.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-tvOS/Pods-spoonAndFork-tvOS.release.xcconfig"; sourceTree = "<group>"; };
		E890FD58A85466E8F253642C /* Pods-spoonAndFork-Restaurant Develop.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-Restaurant Develop.debug.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-Restaurant Develop/Pods-spoonAndFork-Restaurant Develop.debug.xcconfig"; sourceTree = "<group>"; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
		FDC56E298CA5576CF8BDE76C /* Pods-spoonAndFork-spoonAndForkTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-spoonAndFork-spoonAndForkTests.release.xcconfig"; path = "Target Support Files/Pods-spoonAndFork-spoonAndForkTests/Pods-spoonAndFork-spoonAndForkTests.release.xcconfig"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5A0E9AFCB6F0CE357A5BEE6B /* libPods-spoonAndFork-Client Develop.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DC7247AC25300C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8A37620B152D40F3DE567107 /* libPods-spoonAndFork-Client Staging.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DDA247AC25700C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F3A30118A192C6E0C25CF611 /* libPods-spoonAndFork-Client Production.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DED247AC56000C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D78F869AABB8DFDEA6C40925 /* libPods-spoonAndFork-Courier Develop.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E00247AC56300C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3C45B7E6ACF73C107BB697A1 /* libPods-spoonAndFork-Courier Staging.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E13247AC56600C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C69E1CDF134AB2C91CBA3F9B /* libPods-spoonAndFork-Courier Production.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E26247AC5D600C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29297DD9420B83A8644BBAA2 /* libPods-spoonAndFork-Restaurant Develop.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E39247AC5D800C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5E6E5ADAEDDC5681327D63BA /* libPods-spoonAndFork-Restaurant Staging.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E4C247AC5DA00C0D4FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9559AF458375AFD222403599 /* libPods-spoonAndFork-Restaurant Production.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* spoonAndForkTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* spoonAndForkTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = spoonAndForkTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		046DC8DF2FD965A1DA54E7F1 /* Pods */ = {
			isa = PBXGroup;
			children = (
				AD00E0A9F4AECD441BAE7102 /* Pods-spoonAndFork-spoonAndForkTests.debug.xcconfig */,
				FDC56E298CA5576CF8BDE76C /* Pods-spoonAndFork-spoonAndForkTests.release.xcconfig */,
				51EAC0FB6743DFE3D2640B4E /* Pods-spoonAndFork-tvOS.debug.xcconfig */,
				E66B350BA722CCA1977B9060 /* Pods-spoonAndFork-tvOS.release.xcconfig */,
				D99FF4E5B7AB86E5D8F62737 /* Pods-spoonAndFork-tvOSTests.debug.xcconfig */,
				4C575CBF3DEFAC90DDCC60F3 /* Pods-spoonAndFork-tvOSTests.release.xcconfig */,
				3F3B90A0B0B9DFDCEE939B3F /* Pods-spoonAndFork.debug.xcconfig */,
				2201BE4F04C73B463CA7BC44 /* Pods-spoonAndFork.release.xcconfig */,
				E43F844306FE5C8A20EFB078 /* Pods-spoonAndFork-Client Debug.debug.xcconfig */,
				27143D1F26D4C8BA37506FC7 /* Pods-spoonAndFork-Client Debug.release.xcconfig */,
				80FA916C78145D0F18C3176F /* Pods-spoonAndFork-Client Production.debug.xcconfig */,
				555CEDC970299BDF6DEFF243 /* Pods-spoonAndFork-Client Production.release.xcconfig */,
				AE05F1061F9C0E9A735A52F3 /* Pods-spoonAndFork-Client Staging.debug.xcconfig */,
				2C28D79E770B140743766293 /* Pods-spoonAndFork-Client Staging.release.xcconfig */,
				ABB38AAB294DBCEEFF2D47B3 /* Pods-spoonAndFork-Courier Debug.debug.xcconfig */,
				85253E6C352A0587FD6F0EDA /* Pods-spoonAndFork-Courier Debug.release.xcconfig */,
				75B1D49D839C4FE2204D136A /* Pods-spoonAndFork-Courier Production.debug.xcconfig */,
				8A1CCCEC33F7E7F921C73971 /* Pods-spoonAndFork-Courier Production.release.xcconfig */,
				A832FDAEA77FCD066D1370D8 /* Pods-spoonAndFork-Courier Staging.debug.xcconfig */,
				8263687D325B873337B9DD9D /* Pods-spoonAndFork-Courier Staging.release.xcconfig */,
				69F6542A86497FAE61F8BCB6 /* Pods-spoonAndFork-Restaurant Debug.debug.xcconfig */,
				CDCF1133E8124B459F87EF00 /* Pods-spoonAndFork-Restaurant Debug.release.xcconfig */,
				B9F65CFB2870D27E775D0E29 /* Pods-spoonAndFork-Restaurant Production.debug.xcconfig */,
				277DF20D9193983F9A6DB445 /* Pods-spoonAndFork-Restaurant Production.release.xcconfig */,
				8ECF52E970443B17441A12CA /* Pods-spoonAndFork-Restaurant Staging.debug.xcconfig */,
				157F921DFFF5AB23F943876D /* Pods-spoonAndFork-Restaurant Staging.release.xcconfig */,
				B0DF9F7442AEF1AF26CEE647 /* Pods-spoonAndFork-Client Develop.debug.xcconfig */,
				141EA3B193EBE7BAD67923D7 /* Pods-spoonAndFork-Client Develop.release.xcconfig */,
				915887C9B0C638FA21D3E59A /* Pods-spoonAndFork-Courier Develop.debug.xcconfig */,
				1662ED8E175D5DEBF9E2A8F1 /* Pods-spoonAndFork-Courier Develop.release.xcconfig */,
				E890FD58A85466E8F253642C /* Pods-spoonAndFork-Restaurant Develop.debug.xcconfig */,
				187F515D893D3F5E2D5B053D /* Pods-spoonAndFork-Restaurant Develop.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* spoonAndFork */ = {
			isa = PBXGroup;
			children = (
				D5E3493024797CA80006F066 /* Config.xcconfig */,
				D1565D6F24D07245006ADF83 /* GoogleService-Info.plist */,
				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.m */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				13B07FB11A68108700A75B9A /* LaunchScreen.xib */,
				13B07FB71A68108700A75B9A /* main.m */,
			);
			name = spoonAndFork;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
				CC3D22E975B3D4647DAD6D55 /* libPods-spoonAndFork-tvOS.a */,
				374C39A5326744B9D6D3B727 /* libPods-spoonAndFork-tvOSTests.a */,
				56EE7A1F1D3FF3AA00522517 /* libPods-spoonAndFork-Client Production.a */,
				1074E08E731C22D5C3BBC769 /* libPods-spoonAndFork-Client Staging.a */,
				CDAF309988C575DAE01930AC /* libPods-spoonAndFork-Courier Production.a */,
				0C518C86E2B4DD352257E5F6 /* libPods-spoonAndFork-Courier Staging.a */,
				6C6460E86CEB3E61EC70014F /* libPods-spoonAndFork-Restaurant Production.a */,
				E14433685C38D64D090FFBD5 /* libPods-spoonAndFork-Restaurant Staging.a */,
				362E8EAFD1687EAD91D4F970 /* libPods-spoonAndFork-Client Develop.a */,
				6DA6718CD65BE019DA47E0CB /* libPods-spoonAndFork-Courier Develop.a */,
				5D7D9F9BD3709CF3909B08BD /* libPods-spoonAndFork-Restaurant Develop.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				D14A7CCA24B88FBF00DB3568 /* Resources */,
				13B07FAE1A68108700A75B9A /* spoonAndFork */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				00E356EF1AD99517003FC87E /* spoonAndForkTests */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				046DC8DF2FD965A1DA54E7F1 /* Pods */,
				D14A7DF624B8D41300DB3568 /* Client-Develop-Info.plist */,
				D5890DD2247AC25400C0D4FA /* Client-Staging-Info.plist */,
				D5890DE5247AC25800C0D4FA /* Client-Production-Info.plist */,
				D5890DF8247AC56000C0D4FA /* Courier-Develop-Info.plist */,
				D5890E0B247AC56400C0D4FA /* Courier-Staging-Info.plist */,
				D5890E1E247AC56700C0D4FA /* Courier-Production-Info.plist */,
				D5890E31247AC5D600C0D4FA /* Restaurant-Develop-Info.plist */,
				D5890E44247AC5D800C0D4FA /* Restaurant-Staging-Info.plist */,
				D5890E57247AC5DB00C0D4FA /* Restaurant-Production-Info.plist */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* spoonAndFork.app */,
				D5890DD1247AC25300C0D4FA /* Client Staging.app */,
				D5890DE4247AC25800C0D4FA /* Client Production.app */,
				D5890DF7247AC56000C0D4FA /* Courier Develop.app */,
				D5890E0A247AC56300C0D4FA /* Courier Staging.app */,
				D5890E1D247AC56600C0D4FA /* Courier Production.app */,
				D5890E30247AC5D600C0D4FA /* Restaurant Develop.app */,
				D5890E43247AC5D800C0D4FA /* Restaurant Staging.app */,
				D5890E56247AC5DA00C0D4FA /* Restaurant Production.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		D14A7CCA24B88FBF00DB3568 /* Resources */ = {
			isa = PBXGroup;
			children = (
				D14A7D5A24B896CD00DB3568 /* SF-Pro-Rounded-Black.otf */,
				D14A7D5024B896B600DB3568 /* SF-Pro-Rounded-Bold.otf */,
				D14A7D4C24B896B500DB3568 /* SF-Pro-Rounded-Heavy.otf */,
				D14A7D5B24B896CD00DB3568 /* SF-Pro-Rounded-Heavy.otf */,
				D14A7D4D24B896B500DB3568 /* SF-Pro-Rounded-Light.otf */,
				D14A7D5524B896CC00DB3568 /* SF-Pro-Rounded-Bold.otf */,
				D14A7D5624B896CD00DB3568 /* SF-Pro-Rounded-Light.otf */,
				D14A7D5924B896CD00DB3568 /* SF-Pro-Rounded-Semibold.otf */,
				D14A7D5724B896CD00DB3568 /* SF-Pro-Rounded-Thin.otf */,
				D14A7D5824B896CD00DB3568 /* SF-Pro-Rounded-Ultralight.otf */,
				D14A7D5324B896B700DB3568 /* SF-Pro-Rounded-Medium.otf */,
				D1F2ACDD24E1B51400F15A29 /* SF-Pro-Display-Regular.otf */,
				D14A7D4F24B896B600DB3568 /* SF-Pro-Rounded-Regular.otf */,
				D14A7D5124B896B600DB3568 /* SF-Pro-Rounded-Thin.otf */,
			);
			path = Resources;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		13B07F861A680F5B00A75B9A /* Client Develop */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "Client Develop" */;
			buildPhases = (
				E315097E8F0F9F8163381130 /* [CP] Check Pods Manifest.lock */,
				D5E34932247AAB500006F066 /* Generate Config from .env files */,
				FD10A7F022414F080027D42C /* Start Packager */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				0A044DFD8E4127B2C7EFBF11 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Client Develop";
			productName = spoonAndFork;
			productReference = 13B07F961A680F5B00A75B9A /* spoonAndFork.app */;
			productType = "com.apple.product-type.application";
		};
		D5890DC0247AC25300C0D4FA /* Client Staging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890DCE247AC25300C0D4FA /* Build configuration list for PBXNativeTarget "Client Staging" */;
			buildPhases = (
				D5890DC1247AC25300C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890DC2247AC25300C0D4FA /* Generate Config from .env files */,
				D5890DC3247AC25300C0D4FA /* Start Packager */,
				D5890DC4247AC25300C0D4FA /* Sources */,
				D5890DC7247AC25300C0D4FA /* Frameworks */,
				D5890DC9247AC25300C0D4FA /* Resources */,
				D5890DCC247AC25300C0D4FA /* Bundle React Native code and images */,
				D5890DCD247AC25300C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Client Staging";
			productName = spoonAndFork;
			productReference = D5890DD1247AC25300C0D4FA /* Client Staging.app */;
			productType = "com.apple.product-type.application";
		};
		D5890DD3247AC25700C0D4FA /* Client Production */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890DE1247AC25700C0D4FA /* Build configuration list for PBXNativeTarget "Client Production" */;
			buildPhases = (
				D5890DD4247AC25700C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890DD5247AC25700C0D4FA /* Generate Config from .env files */,
				D5890DD6247AC25700C0D4FA /* Start Packager */,
				D5890DD7247AC25700C0D4FA /* Sources */,
				D5890DDA247AC25700C0D4FA /* Frameworks */,
				D5890DDC247AC25700C0D4FA /* Resources */,
				D5890DDF247AC25700C0D4FA /* Bundle React Native code and images */,
				D5890DE0247AC25700C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Client Production";
			productName = spoonAndFork;
			productReference = D5890DE4247AC25800C0D4FA /* Client Production.app */;
			productType = "com.apple.product-type.application";
		};
		D5890DE6247AC56000C0D4FA /* Courier Develop */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890DF4247AC56000C0D4FA /* Build configuration list for PBXNativeTarget "Courier Develop" */;
			buildPhases = (
				D5890DE7247AC56000C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890DE8247AC56000C0D4FA /* Generate Config from .env files */,
				D5890DE9247AC56000C0D4FA /* Start Packager */,
				D5890DEA247AC56000C0D4FA /* Sources */,
				D5890DED247AC56000C0D4FA /* Frameworks */,
				D5890DEF247AC56000C0D4FA /* Resources */,
				D5890DF2247AC56000C0D4FA /* Bundle React Native code and images */,
				D5890DF3247AC56000C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Courier Develop";
			productName = spoonAndFork;
			productReference = D5890DF7247AC56000C0D4FA /* Courier Develop.app */;
			productType = "com.apple.product-type.application";
		};
		D5890DF9247AC56300C0D4FA /* Courier Staging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890E07247AC56300C0D4FA /* Build configuration list for PBXNativeTarget "Courier Staging" */;
			buildPhases = (
				D5890DFA247AC56300C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890DFB247AC56300C0D4FA /* Generate Config from .env files */,
				D5890DFC247AC56300C0D4FA /* Start Packager */,
				D5890DFD247AC56300C0D4FA /* Sources */,
				D5890E00247AC56300C0D4FA /* Frameworks */,
				D5890E02247AC56300C0D4FA /* Resources */,
				D5890E05247AC56300C0D4FA /* Bundle React Native code and images */,
				D5890E06247AC56300C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Courier Staging";
			productName = spoonAndFork;
			productReference = D5890E0A247AC56300C0D4FA /* Courier Staging.app */;
			productType = "com.apple.product-type.application";
		};
		D5890E0C247AC56600C0D4FA /* Courier Production */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890E1A247AC56600C0D4FA /* Build configuration list for PBXNativeTarget "Courier Production" */;
			buildPhases = (
				D5890E0D247AC56600C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890E0E247AC56600C0D4FA /* Generate Config from .env files */,
				D5890E0F247AC56600C0D4FA /* Start Packager */,
				D5890E10247AC56600C0D4FA /* Sources */,
				D5890E13247AC56600C0D4FA /* Frameworks */,
				D5890E15247AC56600C0D4FA /* Resources */,
				D5890E18247AC56600C0D4FA /* Bundle React Native code and images */,
				D5890E19247AC56600C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Courier Production";
			productName = spoonAndFork;
			productReference = D5890E1D247AC56600C0D4FA /* Courier Production.app */;
			productType = "com.apple.product-type.application";
		};
		D5890E1F247AC5D600C0D4FA /* Restaurant Develop */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890E2D247AC5D600C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Develop" */;
			buildPhases = (
				D5890E20247AC5D600C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890E21247AC5D600C0D4FA /* Generate Config from .env files */,
				D5890E22247AC5D600C0D4FA /* Start Packager */,
				D5890E23247AC5D600C0D4FA /* Sources */,
				D5890E26247AC5D600C0D4FA /* Frameworks */,
				D5890E28247AC5D600C0D4FA /* Resources */,
				D5890E2B247AC5D600C0D4FA /* Bundle React Native code and images */,
				D5890E2C247AC5D600C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Restaurant Develop";
			productName = spoonAndFork;
			productReference = D5890E30247AC5D600C0D4FA /* Restaurant Develop.app */;
			productType = "com.apple.product-type.application";
		};
		D5890E32247AC5D800C0D4FA /* Restaurant Staging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890E40247AC5D800C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Staging" */;
			buildPhases = (
				D5890E33247AC5D800C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890E34247AC5D800C0D4FA /* Generate Config from .env files */,
				D5890E35247AC5D800C0D4FA /* Start Packager */,
				D5890E36247AC5D800C0D4FA /* Sources */,
				D5890E39247AC5D800C0D4FA /* Frameworks */,
				D5890E3B247AC5D800C0D4FA /* Resources */,
				D5890E3E247AC5D800C0D4FA /* Bundle React Native code and images */,
				D5890E3F247AC5D800C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Restaurant Staging";
			productName = spoonAndFork;
			productReference = D5890E43247AC5D800C0D4FA /* Restaurant Staging.app */;
			productType = "com.apple.product-type.application";
		};
		D5890E45247AC5DA00C0D4FA /* Restaurant Production */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5890E53247AC5DA00C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Production" */;
			buildPhases = (
				D5890E46247AC5DA00C0D4FA /* [CP] Check Pods Manifest.lock */,
				D5890E47247AC5DA00C0D4FA /* Generate Config from .env files */,
				D5890E48247AC5DA00C0D4FA /* Start Packager */,
				D5890E49247AC5DA00C0D4FA /* Sources */,
				D5890E4C247AC5DA00C0D4FA /* Frameworks */,
				D5890E4E247AC5DA00C0D4FA /* Resources */,
				D5890E51247AC5DA00C0D4FA /* Bundle React Native code and images */,
				D5890E52247AC5DA00C0D4FA /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Restaurant Production";
			productName = spoonAndFork;
			productReference = D5890E56247AC5DA00C0D4FA /* Restaurant Production.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1130;
				TargetAttributes = {
					13B07F861A680F5B00A75B9A = {
						DevelopmentTeam = 76VZ29XX5L;
						LastSwiftMigration = 1120;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "spoonAndFork" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* Client Develop */,
				D5890DC0247AC25300C0D4FA /* Client Staging */,
				D5890DD3247AC25700C0D4FA /* Client Production */,
				D5890DE6247AC56000C0D4FA /* Courier Develop */,
				D5890DF9247AC56300C0D4FA /* Courier Staging */,
				D5890E0C247AC56600C0D4FA /* Courier Production */,
				D5890E1F247AC5D600C0D4FA /* Restaurant Develop */,
				D5890E32247AC5D800C0D4FA /* Restaurant Staging */,
				D5890E45247AC5DA00C0D4FA /* Restaurant Production */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D14A7D6024B896CE00DB3568 /* SF-Pro-Rounded-Ultralight.otf in Resources */,
				D1F2ACDE24E1B51400F15A29 /* SF-Pro-Display-Regular.otf in Resources */,
				D14A7D8624B8970200DB3568 /* SF-Pro-Rounded-Regular.otf in Resources */,
				D14A7D5D24B896CE00DB3568 /* SF-Pro-Rounded-Bold.otf in Resources */,
				D14A7D5E24B896CE00DB3568 /* SF-Pro-Rounded-Light.otf in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
				D1565D7024D07245006ADF83 /* GoogleService-Info.plist in Resources */,
				D14A7D5F24B896CE00DB3568 /* SF-Pro-Rounded-Thin.otf in Resources */,
				D14A7D6324B896CE00DB3568 /* SF-Pro-Rounded-Heavy.otf in Resources */,
				D14A7D8524B8970000DB3568 /* SF-Pro-Rounded-Medium.otf in Resources */,
				D14A7D6124B896CE00DB3568 /* SF-Pro-Rounded-Semibold.otf in Resources */,
				D14A7DF924BCC65300DB3568 /* SF-Pro-Rounded-Black.otf in Resources */,
				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DC9247AC25300C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DCA247AC25300C0D4FA /* Images.xcassets in Resources */,
				D5890DCB247AC25300C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37224DC3D950009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DDC247AC25700C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DDD247AC25700C0D4FA /* Images.xcassets in Resources */,
				D5890DDE247AC25700C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37324DC3D950009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DEF247AC56000C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D14A7DF724BC7B8100DB3568 /* SF-Pro-Rounded-Bold.otf in Resources */,
				D14A7DF824BC7B8A00DB3568 /* SF-Pro-Rounded-Regular.otf in Resources */,
				D1565D7124D07246006ADF83 /* GoogleService-Info.plist in Resources */,
				D5890DF0247AC56000C0D4FA /* Images.xcassets in Resources */,
				D1F2ACDF24E1B51400F15A29 /* SF-Pro-Display-Regular.otf in Resources */,
				D5890DF1247AC56000C0D4FA /* LaunchScreen.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E02247AC56300C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E03247AC56300C0D4FA /* Images.xcassets in Resources */,
				D5890E04247AC56300C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37424DC3D970009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E15247AC56600C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E16247AC56600C0D4FA /* Images.xcassets in Resources */,
				D5890E17247AC56600C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37524DC3D970009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E28247AC5D600C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E29247AC5D600C0D4FA /* Images.xcassets in Resources */,
				D1C581C624E5B3FF00EA64C1 /* SF-Pro-Rounded-Regular.otf in Resources */,
				D5890E2A247AC5D600C0D4FA /* LaunchScreen.xib in Resources */,
				D1F2ACE024E1B51500F15A29 /* SF-Pro-Display-Regular.otf in Resources */,
				D1565D7224D07246006ADF83 /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E3B247AC5D800C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E3C247AC5D800C0D4FA /* Images.xcassets in Resources */,
				D5890E3D247AC5D800C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37624DC3D980009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E4E247AC5DA00C0D4FA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E4F247AC5DA00C0D4FA /* Images.xcassets in Resources */,
				D5890E50247AC5DA00C0D4FA /* LaunchScreen.xib in Resources */,
				D131C37724DC3D990009C9BF /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.client.ts\n";
		};
		0A044DFD8E4127B2C7EFBF11 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Develop/Pods-spoonAndFork-Client Develop-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Develop/Pods-spoonAndFork-Client Develop-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DC1247AC25300C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Client Staging-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DC2247AC25300C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890DC3247AC25300C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890DCC247AC25300C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.client.ts\n";
		};
		D5890DCD247AC25300C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Staging/Pods-spoonAndFork-Client Staging-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Staging/Pods-spoonAndFork-Client Staging-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DD4247AC25700C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Client Production-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DD5247AC25700C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890DD6247AC25700C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890DDF247AC25700C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.client.ts\n";
		};
		D5890DE0247AC25700C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Production/Pods-spoonAndFork-Client Production-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Client Production/Pods-spoonAndFork-Client Production-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DE7247AC56000C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Courier Develop-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DE8247AC56000C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890DE9247AC56000C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890DF2247AC56000C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.courier.ts\n";
		};
		D5890DF3247AC56000C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Develop/Pods-spoonAndFork-Courier Develop-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Develop/Pods-spoonAndFork-Courier Develop-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DFA247AC56300C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Courier Staging-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890DFB247AC56300C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890DFC247AC56300C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890E05247AC56300C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.courier.ts\n";
		};
		D5890E06247AC56300C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Staging/Pods-spoonAndFork-Courier Staging-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Staging/Pods-spoonAndFork-Courier Staging-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E0D247AC56600C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Courier Production-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E0E247AC56600C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890E0F247AC56600C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890E18247AC56600C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.courier.ts\n";
		};
		D5890E19247AC56600C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Production/Pods-spoonAndFork-Courier Production-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Courier Production/Pods-spoonAndFork-Courier Production-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E20247AC5D600C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Restaurant Develop-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E21247AC5D600C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890E22247AC5D600C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890E2B247AC5D600C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.restaurant.ts\n";
		};
		D5890E2C247AC5D600C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Develop/Pods-spoonAndFork-Restaurant Develop-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Develop/Pods-spoonAndFork-Restaurant Develop-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E33247AC5D800C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Restaurant Staging-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E34247AC5D800C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890E35247AC5D800C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890E3E247AC5D800C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.restaurant.ts\n";
		};
		D5890E3F247AC5D800C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Staging/Pods-spoonAndFork-Restaurant Staging-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Staging/Pods-spoonAndFork-Restaurant Staging-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E46247AC5DA00C0D4FA /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Restaurant Production-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		D5890E47247AC5DA00C0D4FA /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		D5890E48247AC5DA00C0D4FA /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5890E51247AC5DA00C0D4FA /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh ./index.restaurant.ts\n";
		};
		D5890E52247AC5DA00C0D4FA /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Production/Pods-spoonAndFork-Restaurant Production-resources.sh",
				"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Resources/GoogleMaps.bundle",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowLeft@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPArrowRight@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCheckmark@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPCloseButton@3x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPDismissKeyboard@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/MPLogo@2x.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/Images/placeholder-image.png",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~ipad.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphonelandscape.xib",
				"${PODS_ROOT}/Mixpanel/Mixpanel/MPTakeoverNotificationViewController~iphoneportrait.xib",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleMaps.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowLeft@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPArrowRight@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCheckmark@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPCloseButton@3x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPDismissKeyboard@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPLogo@2x.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/placeholder-image.png",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~ipad.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphonelandscape.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MPTakeoverNotificationViewController~iphoneportrait.nib",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-spoonAndFork-Restaurant Production/Pods-spoonAndFork-Restaurant Production-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D5E34932247AAB500006F066 /* Generate Config from .env files */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Generate Config from .env files";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb\" \"${SRCROOT}/..\" \"${SRCROOT}/tmp.xcconfig\"\n";
		};
		E315097E8F0F9F8163381130 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-spoonAndFork-Client Develop-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		FD10A7F022414F080027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DC4247AC25300C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DC5247AC25300C0D4FA /* AppDelegate.m in Sources */,
				D5890DC6247AC25300C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DD7247AC25700C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DD8247AC25700C0D4FA /* AppDelegate.m in Sources */,
				D5890DD9247AC25700C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DEA247AC56000C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DEB247AC56000C0D4FA /* AppDelegate.m in Sources */,
				D5890DEC247AC56000C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890DFD247AC56300C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890DFE247AC56300C0D4FA /* AppDelegate.m in Sources */,
				D5890DFF247AC56300C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E10247AC56600C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E11247AC56600C0D4FA /* AppDelegate.m in Sources */,
				D5890E12247AC56600C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E23247AC5D600C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E24247AC5D600C0D4FA /* AppDelegate.m in Sources */,
				D5890E25247AC5D600C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E36247AC5D800C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E37247AC5D800C0D4FA /* AppDelegate.m in Sources */,
				D5890E38247AC5D800C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5890E49247AC5DA00C0D4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D5890E4A247AC5DA00C0D4FA /* AppDelegate.m in Sources */,
				D5890E4B247AC5DA00C0D4FA /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		13B07FB11A68108700A75B9A /* LaunchScreen.xib */ = {
			isa = PBXVariantGroup;
			children = (
				13B07FB21A68108700A75B9A /* Base */,
			);
			name = LaunchScreen.xib;
			path = spoonAndFork;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B0DF9F7442AEF1AF26CEE647 /* Pods-spoonAndFork-Client Develop.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = 76VZ29XX5L;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Client-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = spoonAndFork;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 141EA3B193EBE7BAD67923D7 /* Pods-spoonAndFork-Client Develop.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = 76VZ29XX5L;
				INFOPLIST_FILE = "Client-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = spoonAndFork;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D5E3493024797CA80006F066 /* Config.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D5E3493024797CA80006F066 /* Config.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		D5890DCF247AC25300C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = AE05F1061F9C0E9A735A52F3 /* Pods-spoonAndFork-Client Staging.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Client-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890DD0247AC25300C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2C28D79E770B140743766293 /* Pods-spoonAndFork-Client Staging.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Client-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890DE2247AC25700C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 80FA916C78145D0F18C3176F /* Pods-spoonAndFork-Client Production.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Client-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890DE3247AC25700C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 555CEDC970299BDF6DEFF243 /* Pods-spoonAndFork-Client Production.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Client-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890DF5247AC56000C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 915887C9B0C638FA21D3E59A /* Pods-spoonAndFork-Courier Develop.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Courier-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890DF6247AC56000C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1662ED8E175D5DEBF9E2A8F1 /* Pods-spoonAndFork-Courier Develop.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Courier-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890E08247AC56300C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A832FDAEA77FCD066D1370D8 /* Pods-spoonAndFork-Courier Staging.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Courier-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890E09247AC56300C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8263687D325B873337B9DD9D /* Pods-spoonAndFork-Courier Staging.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Courier-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890E1B247AC56600C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 75B1D49D839C4FE2204D136A /* Pods-spoonAndFork-Courier Production.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Courier-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890E1C247AC56600C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8A1CCCEC33F7E7F921C73971 /* Pods-spoonAndFork-Courier Production.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Courier-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890E2E247AC5D600C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = E890FD58A85466E8F253642C /* Pods-spoonAndFork-Restaurant Develop.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Restaurant-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890E2F247AC5D600C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 187F515D893D3F5E2D5B053D /* Pods-spoonAndFork-Restaurant Develop.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Restaurant-Develop-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890E41247AC5D800C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8ECF52E970443B17441A12CA /* Pods-spoonAndFork-Restaurant Staging.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Restaurant-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890E42247AC5D800C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 157F921DFFF5AB23F943876D /* Pods-spoonAndFork-Restaurant Staging.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Restaurant-Staging-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		D5890E54247AC5DA00C0D4FA /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B9F65CFB2870D27E775D0E29 /* Pods-spoonAndFork-Restaurant Production.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				ENABLE_BITCODE = NO;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"FB_SONARKIT_ENABLED=1",
				);
				INFOPLIST_FILE = "Restaurant-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		D5890E55247AC5DA00C0D4FA /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 277DF20D9193983F9A6DB445 /* Pods-spoonAndFork-Restaurant Production.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				INFOPLIST_FILE = "Restaurant-Production-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "Client Develop" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "spoonAndFork" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890DCE247AC25300C0D4FA /* Build configuration list for PBXNativeTarget "Client Staging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890DCF247AC25300C0D4FA /* Debug */,
				D5890DD0247AC25300C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890DE1247AC25700C0D4FA /* Build configuration list for PBXNativeTarget "Client Production" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890DE2247AC25700C0D4FA /* Debug */,
				D5890DE3247AC25700C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890DF4247AC56000C0D4FA /* Build configuration list for PBXNativeTarget "Courier Develop" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890DF5247AC56000C0D4FA /* Debug */,
				D5890DF6247AC56000C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890E07247AC56300C0D4FA /* Build configuration list for PBXNativeTarget "Courier Staging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890E08247AC56300C0D4FA /* Debug */,
				D5890E09247AC56300C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890E1A247AC56600C0D4FA /* Build configuration list for PBXNativeTarget "Courier Production" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890E1B247AC56600C0D4FA /* Debug */,
				D5890E1C247AC56600C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890E2D247AC5D600C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Develop" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890E2E247AC5D600C0D4FA /* Debug */,
				D5890E2F247AC5D600C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890E40247AC5D800C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Staging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890E41247AC5D800C0D4FA /* Debug */,
				D5890E42247AC5D800C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D5890E53247AC5DA00C0D4FA /* Build configuration list for PBXNativeTarget "Restaurant Production" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D5890E54247AC5DA00C0D4FA /* Debug */,
				D5890E55247AC5DA00C0D4FA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
